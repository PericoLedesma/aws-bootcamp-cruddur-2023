#! /usr/bin/bash   python3

import boto3
import sys

print("===>Running ddb/schema-load...")

attrs = {
    'endpoint_url':'http://localhost:8000'
    }


if len(sys.argv) == 2:
    if "prod" in sys.argv[1]:
        attrs = {}

print("Connecting to ", attrs)
ddb = boto3.client('dynamodb', **attrs)

table_name = 'cruddur-messages'



response = ddb.create_table(
    TableName = table_name,
    AttributeDefinitions=[
        {
            'AttributeName': 'message_group_uuid',
            'AttributeType': 'S'
        },
        {
            'AttributeName': 'pk', # partition key 
            'AttributeType': 'S' # |'N'|'B' string / number/ binary 
        },
        {
            'AttributeName': 'sk', # Sort key
            'AttributeType': 'S' # |'N'|'B' string / number/ binary 
        }
    ],
    KeySchema=[
        {
            'AttributeName': 'pk',
            'KeyType': 'HASH' # 'HASH'|'RANGE'
        },
        {
            'AttributeName': 'sk',
            'KeyType': 'RANGE'
        }
    ],
    GlobalSecondaryIndexes= [{
        'IndexName':'message-group-sk-index',
        'KeySchema':[{
        'AttributeName': 'message_group_uuid',
        'KeyType': 'HASH'
        },{
        'AttributeName': 'sk',
        'KeyType': 'RANGE'
        }],
        'Projection': {
        'ProjectionType': 'ALL'
        },
        'ProvisionedThroughput': {
        'ReadCapacityUnits': 5,
        'WriteCapacityUnits': 5
        },
    }],
    BillingMode= 'PROVISIONED',  #'PROVISIONED'|'PAY_PER_REQUEST',
    ProvisionedThroughput={
        'ReadCapacityUnits': 5,
        'WriteCapacityUnits': 5
    } 
    #TableClass='STANDARD'|'STANDARD_INFREQUENT_ACCESS',
    #DeletionProtectionEnabled=True|False
)
print("----Print reponse----")
print(response)
print("----Clossing schema load----")